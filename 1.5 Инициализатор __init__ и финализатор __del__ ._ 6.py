"""
Подвиг 7.
Объявите в программе следующие несколько классов:

CPU - класс для описания процессоров;
Memory - класс для описания памяти;
MotherBoard - класс для описания материнских плат

Обеспечить возможность создания объектов каждого класса командами:

cpu = CPU(наименование, тактовая частота)
mem = Memory(наименование, размер памяти)
mb = MotherBoard(наименование, процессор, память1, память2, ..., памятьN)

Обратите внимание при создании объекта класса MotherBoard можно передавать несколько объектов класса Memory,
максимум N - по числу слотов памяти на материнской плате (N = 4).

Объекты классов должны иметь следующие локальные свойства:
- для класса CPU:
                name - наименование;
                fr - тактовая частота;
- для класса Memory:
                name - наименование;
                volume - объем памяти;
- для класса MotherBoard:
                name - наименование;
                cpu - ссылка на объект класса CPU;
                total_mem_slots = 4 - общее число слотов памяти (атрибут прописывается с этим значением и не меняется);
                mem_slots - список из объектов класса Memory (максимум total_mem_slots = 4 штук по максимальному числу
                            слотов памяти).

Класс MotherBoard должен иметь метод get_config(self) для возвращения текущей конфигурации компонентов на материнской
плате в виде следующего списка из четырех строк:

['Материнская плата: <наименование>',
'Центральный процессор: <наименование>, <тактовая частота>',
'Слотов памяти: <общее число слотов памяти>',
'Память: <наименование_1> - <объем_1>; <наименование_2> - <объем_2>; ...; <наименование_N> - <объем_N>']

Создайте объект mb класса MotherBoard с одним CPU (объект класса CPU) и двумя слотами памяти (объекты класса Memory).
P.S. Отображать на экране ничего не нужно, только создать объект по указанным требованиям.
"""


class CPU:
    """- класс для описания процессоров """

    def __init__(self, name, fr):
        self.name = name  # наименование
        self.fr = fr  # тактовая частота


class Memory:
    """- класс для описания памяти """

    def __init__(self, name, volume):
        self.name = name  # наименование
        self.volume = volume  # объем памяти


class MotherBoard:
    """- класс для описания материнских плат """

    def __init__(self, name, cpu,*mem):
        self.total_mem_slots = 4
        self.name = name  # наименование
        self.cpu = cpu  # ссылка на объект класса CPU
        self.mem_slots = mem[:self.total_mem_slots]  # список из объектов класса Memory (максимум 4 по total_mem_slots))

    def get_config(self):
        """ для ВОЗВРАЩЕНИЯ (не принта!) текущей конфигурации компонентов на материнской плате в виде списка из
        четырех строк """

        return [f"Материнская плата: {self.name}",
               f"Центральный процессор: {self.cpu.name}, {self.cpu.fr}",
               f"Слотов памяти: {self.total_mem_slots}",
               f"Память: {'; '.join([f'{i.name} - {i.volume}' for i in self.mem_slots])}"]


cpu = CPU("Intel Core i7", "3.6GHz")  # наименование, тактовая частота

mem1 = Memory("Corsair", "16GB")  # наименование, размер памяти
mem2 = Memory("Kingston", "8GB")  # наименование, размер памяти
# mem3 = Memory("super", "super")
# mem4 = Memory("no_super", "1")
# mem5 = Memory("!!!!", "1024gb")

# Создайте объект mb класса MotherBoard с одним CPU (объект класса CPU) и двумя слотами памяти (объекты класса Memory)
mb = MotherBoard("ASUS ROG", cpu, mem1, mem2)
print(mb.get_config())
